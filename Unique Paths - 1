class Solution {
public:
    
    
    
      //recursive solution------>  
    
    
    
    int solve(int m ,int n,vector<vector<int>>& dp)
    {
       if(m == 0 && n == 0)
           return 1;
        if(m < 0 || n < 0)
        {
            return 0;
        }
        
        if(dp[m][n] != -1)
            return dp[m][n];
        
        int one = solve(m,n-1,dp);
        int two = solve(m-1,n,dp);
        
        return dp[m][n]=one+two;    
    }
    
    
    
    
       //tabulation solution 
          
    
    
    
    int uniquePaths(int m, int n) {       
        vector<vector<int>> dp(m+1,vector<int>(n+1,-1));        
        dp[0][0] = 1;
    
        for(int i = 0 ;i<m;i++)
        {
            for(int j = 0;j<n;j++)
            {
                if(i == 0 && j == 0)
                    dp[i][j] = 1;
                else
                {
                    int up = 0;
                    int left = 0;                    
                    if(j>0)
                        up = dp[i][j-1];
                    if(i > 0)
                        left = dp[i-1][j];
                    dp[i][j] = up+left; 
                }
            }
        }
        
        return dp[m-1][n-1];
    }
};
