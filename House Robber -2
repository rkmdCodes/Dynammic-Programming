
//this is variation of house robber one where last and first house treated as the adjacent house.


class Solution {
public:
    int solve(vector<int>& house)
    {
        int n = house.size();
        
        if(n == 1)
            return house[0];
        
        if( n == 2)
            return max(house[0],house[1]);
        
        int prev2 = house[0];
        int prev  = max(house[0],house[1]);
        int curr = prev;
        
        for(int i = 2;i<n;i++)
        {
            curr = max(house[i]+prev2,prev);
            prev2 = prev;
            prev = curr;   
        }
        
      return curr; 
    }
    
    int rob(vector<int>& nums) {
      int n = nums.size();
        
       if( n == 1)
           return nums[0];
       
        if(n == 2)
            return max(nums[0],nums[1]);
        
       vector<int> one;
        vector<int> two;
        for(int i = 0;i<n;i++)
        {
            if(i!=0) one.push_back(nums[i]);
            if(i!= n-1) two.push_back(nums[i]);
        }
        
        int option = solve(one);
        int option2 = solve(two);
       return max(option,option2); 
    }
};
